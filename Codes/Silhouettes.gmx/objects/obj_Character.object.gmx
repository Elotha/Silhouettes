<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_CharacterDown</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>obj_CharacterParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

{
    darkness_up = 0;
    darkness_down = 0;
    darkness_left = 0;
    darkness_right = 0;
    darkness_x = 0;
    
    ver_mov = 1;
    hor_mov = 1;
    mov_cd = true;
    hor_total = 0;
    silhouette = 0;
    //image_blend = make_colour_hsv(150,100,220);
    image_speed = 0;
    
    step_y = 0;
    global.max_y = false;
    global.last_hor = 16;
    global.last_ver = 0;
    global.light_xfix = 0;
    global.light_yfix = 0;
    
    
    event_inherited();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite Animation

{
    image_index++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alpha

{
    if image_alpha &gt; 0
        {
        image_alpha -= 0.1;
        alarm[2] = 1;
        }
    else instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Randomize

{
    rnd[0] = irandom(360);
    rnd[1] = irandom(360);
    rnd[2] = irandom(360);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

{
    global.light_xfix = global.last_hor;
    global.light_yfix = global.last_ver;
    step_y += global.last_ver;
    image_index = (image_index+1) mod 4;
    
    if global.last_hor != 0
        {
        with(obj_TileCreator) x -= global.last_hor;
        }
    
    hor_total += global.last_hor;
    if abs(hor_total) = 32
        {
        if global.last_hor != 0 then with(obj_TileCreator)
            {
            if global.last_hor &gt; 0
                {
                tile_code = string_copy(tile_code,5,156)+string_copy(tile_code,1,4);
                x += 32;
                }
            else if global.last_hor &lt; 0
                {
                tile_code = string_copy(tile_code,string_length(tile_code)-3,4)+string_copy(tile_code,1,156);
                x -= 32;
                }
            }
        hor_total = 0;
        }
    
        
    if abs(step_y) &gt; 30*32 &amp;&amp; global.last_ver != 0
        {
        global.max_y = true;
        }
        
    with(obj_Everything)
        {
        if object_index != obj_Character
            {
            x -= global.last_hor;
            if !global.max_y then y -= global.last_ver;
            }
            
        if object_index = obj_Particles then event_user(0);
        }

    
    if !global.max_y then with(obj_TileCreator) y -= global.last_ver;
    if global.max_y
        {
        step_y -= global.last_ver;
        global.max_y = false;
        with(obj_Camera)
            {
            y -= global.last_ver;
            }
        }
    
    mov_cd = true;
    image_alpha = 1;
   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
{
    if alarm[2] != -1 then exit;
    
    hor_mov = (keyboard_check(vk_right) || keyboard_check(ord('D'))) - (keyboard_check(vk_left) || keyboard_check(ord('A')));
    ver_mov = (keyboard_check(vk_down) || keyboard_check(ord('S'))) - (keyboard_check(vk_up) || keyboard_check(ord('W')));
        
    if global.dialog_time || global.option_time
        {
        hor_mov = 0;
        ver_mov = 0;
        }
        
    if mov_cd &amp;&amp; alarm[0] = -1 &amp;&amp; (hor_mov != 0 || ver_mov != 0)
        {
    
        dir = point_direction(x,y,x+hor_mov,y+ver_mov);
        var obstacle = collision_line(x,y,x+lengthdir_x(24,dir),y+lengthdir_y(24,dir),obj_Block,false,true);
        if obstacle = noone 
            {
            mov_cd = false;
            alarm[0] = 10;
            global.last_hor = hor_mov*16;
            global.last_ver = ver_mov*16;
            silhouette = 10;
            }
    }
    
        
    if hor_mov = 1
        {
        sprite_index = spr_CharacterRight; 
        if alarm[1] = -1 then alarm[1] = 10;;
        }
    else if hor_mov = -1 
        {
        sprite_index = spr_CharacterLeft; 
        if alarm[1] = -1 then alarm[1] = 10;;
        }
    if ver_mov = 1 then sprite_index = spr_CharacterDown; else if ver_mov = -1 then sprite_index = spr_CharacterUp;
    if ver_mov = 0 &amp;&amp; hor_mov = 0 then image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Depth

{
    depth = -y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement Effect

{
    if silhouette != 0
        {
        draw_sprite_ext(sprite_index,(image_index+1) mod 4,x+global.last_hor,y+global.last_ver,1,1,0,image_blend,1-(silhouette/10));
        silhouette--;
        image_alpha -= 0.1;
        }
        
    
    draw_self();
    draw_sprite_ext(sprite_index,image_index,x+lengthdir_x(2,rnd[0]),y+lengthdir_y(2,rnd[0]),1,1,0,image_blend,0.3);
    draw_sprite_ext(sprite_index,image_index,x+lengthdir_x(3,rnd[1]),y+lengthdir_y(3,rnd[1]),1,1,0,image_blend,0.25);
    draw_sprite_ext(sprite_index,image_index,x+lengthdir_x(5,rnd[2]),y+lengthdir_y(5,rnd[2]),1,1,0,image_blend,0.2);
    draw_sprite_ext(sprite_index,image_index,x+lengthdir_x(10,rnd[2]),y+lengthdir_y(10,rnd[2]),1,1,0,image_blend,0.1);
    
    if alarm[1] = -1 then alarm[1] = 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
